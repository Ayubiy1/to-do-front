{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\\\\to-do\\\\src\\\\components\\\\pages\\\\Lists.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListPage = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n\n  // 1. Boardni name orqali topib, faqat _id ni qaytarish\n  const {\n    data: boardId,\n    isLoading: boardLoading,\n    error: boardError\n  } = useQuery({\n    queryKey: [\"boardId\", name],\n    queryFn: async () => {\n      const res = await axios.get(`http://localhost:3000/api/boards`);\n      const board = res.data.find(b => b.name === name);\n      if (!board) throw new Error(\"Board topilmadi\");\n      return board._id; // faqat _id qaytadi\n    },\n    enabled: !!name\n  });\n\n  // 2. Board ID bo‘yicha listlarni olish\n  const {\n    data: lists,\n    isLoading: listsLoading,\n    error: listsError\n  } = useQuery({\n    queryKey: [\"lists\", boardId],\n    queryFn: async () => {\n      const res = await axios.get(`http://localhost:3000/api/lists?boardId=${boardId}`);\n      return res.data;\n    },\n    enabled: !!boardId // faqat boardId mavjud bo‘lsa ishlaydi\n  });\n  if (boardLoading || listsLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 44\n  }, this);\n  if (boardError) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: boardError.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 26\n  }, this);\n  if (listsError) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: listsError.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Lists for \", name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(lists, null, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(ListPage, \"8X5lD3oeFbw0jjkqL8DR6Je/sFU=\", false, function () {\n  return [useParams, useQuery, useQuery];\n});\n_c = ListPage;\nexport default ListPage;\n\n// import { useQuery } from \"@tanstack/react-query\";\n// import { useParams } from \"react-router-dom\";\n// import axios from \"axios\";\n// import { Card } from \"antd\";\n\n// const ListPage = () => {\n//   const { name } = useParams();\n\n//   const { data, isLoading, error } = useQuery({\n//     queryKey: [\"board\", name],\n//     queryFn: async () => {\n//       if (!name) return null; // name bo'lmasa query ishlamasin\n//       const res = await axios.get(`http://localhost:3000/api/boards`);\n//       // name bo‘yicha filter yoki find\n\n//       return res.data.find((board) => board.name === name);\n//     },\n//     enabled: !!name, // faqat name mavjud bo'lsa fetch qiladi\n//   });\n\n//   const { data: dataList } = useQuery({\n//     queryKey: [\"list-one\"],\n//     queryFn: async () => {\n//       if (!name) return null;\n//       const res = await axios.get(\n//         `http://localhost:3000/api/lists?boardId=${boardId}`\n//       );\n//       return res.data;\n//     },\n//     enabled: !!name, // faqat name mavjud bo'lsa fetch qiladi\n//   });\n\n//   console.log(dataList);\n\n//   if (isLoading) return <div>Loading...</div>;\n//   if (error) return <div>Error: {error.message}</div>;\n//   if (!data) return <div>No data found</div>;\n\n//   return (\n//     <>\n//       <Card></Card>\n//     </>\n//   );\n// };\n\n// export default ListPage;\nvar _c;\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"names":["useQuery","useParams","axios","jsxDEV","_jsxDEV","ListPage","_s","name","data","boardId","isLoading","boardLoading","error","boardError","queryKey","queryFn","res","get","board","find","b","Error","_id","enabled","lists","listsLoading","listsError","children","fileName","_jsxFileName","lineNumber","columnNumber","message","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Новая папка/to-do/src/components/pages/Lists.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst ListPage = () => {\r\n  const { name } = useParams();\r\n\r\n  // 1. Boardni name orqali topib, faqat _id ni qaytarish\r\n  const {\r\n    data: boardId,\r\n    isLoading: boardLoading,\r\n    error: boardError,\r\n  } = useQuery({\r\n    queryKey: [\"boardId\", name],\r\n    queryFn: async () => {\r\n      const res = await axios.get(`http://localhost:3000/api/boards`); \r\n      const board = res.data.find((b) => b.name === name);\r\n      if (!board) throw new Error(\"Board topilmadi\");\r\n      return board._id; // faqat _id qaytadi\r\n    },\r\n    enabled: !!name,\r\n  });\r\n\r\n  // 2. Board ID bo‘yicha listlarni olish\r\n  const {\r\n    data: lists,\r\n    isLoading: listsLoading,\r\n    error: listsError,\r\n  } = useQuery({\r\n    queryKey: [\"lists\", boardId],\r\n    queryFn: async () => {\r\n      const res = await axios.get(\r\n        `http://localhost:3000/api/lists?boardId=${boardId}`\r\n      );\r\n      return res.data;\r\n    },\r\n    enabled: !!boardId, // faqat boardId mavjud bo‘lsa ishlaydi\r\n  });\r\n\r\n  if (boardLoading || listsLoading) return <p>Loading...</p>;\r\n  if (boardError) return <p>{boardError.message}</p>;\r\n  if (listsError) return <p>{listsError.message}</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Lists for {name}</h2>\r\n      <pre>{JSON.stringify(lists, null, 2)}</pre>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListPage;\r\n\r\n// import { useQuery } from \"@tanstack/react-query\";\r\n// import { useParams } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import { Card } from \"antd\";\r\n\r\n// const ListPage = () => {\r\n//   const { name } = useParams();\r\n\r\n//   const { data, isLoading, error } = useQuery({\r\n//     queryKey: [\"board\", name],\r\n//     queryFn: async () => {\r\n//       if (!name) return null; // name bo'lmasa query ishlamasin\r\n//       const res = await axios.get(`http://localhost:3000/api/boards`);\r\n//       // name bo‘yicha filter yoki find\r\n\r\n//       return res.data.find((board) => board.name === name);\r\n//     },\r\n//     enabled: !!name, // faqat name mavjud bo'lsa fetch qiladi\r\n//   });\r\n\r\n//   const { data: dataList } = useQuery({\r\n//     queryKey: [\"list-one\"],\r\n//     queryFn: async () => {\r\n//       if (!name) return null;\r\n//       const res = await axios.get(\r\n//         `http://localhost:3000/api/lists?boardId=${boardId}`\r\n//       );\r\n//       return res.data;\r\n//     },\r\n//     enabled: !!name, // faqat name mavjud bo'lsa fetch qiladi\r\n//   });\r\n\r\n//   console.log(dataList);\r\n\r\n//   if (isLoading) return <div>Loading...</div>;\r\n//   if (error) return <div>Error: {error.message}</div>;\r\n//   if (!data) return <div>No data found</div>;\r\n\r\n//   return (\r\n//     <>\r\n//       <Card></Card>\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default ListPage;\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM;IAAEC;EAAK,CAAC,GAAGN,SAAS,CAAC,CAAC;;EAE5B;EACA,MAAM;IACJO,IAAI,EAAEC,OAAO;IACbC,SAAS,EAAEC,YAAY;IACvBC,KAAK,EAAEC;EACT,CAAC,GAAGb,QAAQ,CAAC;IACXc,QAAQ,EAAE,CAAC,SAAS,EAAEP,IAAI,CAAC;IAC3BQ,OAAO,EAAE,MAAAA,CAAA,KAAY;MACnB,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAC,kCAAkC,CAAC;MAC/D,MAAMC,KAAK,GAAGF,GAAG,CAACR,IAAI,CAACW,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACb,IAAI,KAAKA,IAAI,CAAC;MACnD,IAAI,CAACW,KAAK,EAAE,MAAM,IAAIG,KAAK,CAAC,iBAAiB,CAAC;MAC9C,OAAOH,KAAK,CAACI,GAAG,CAAC,CAAC;IACpB,CAAC;IACDC,OAAO,EAAE,CAAC,CAAChB;EACb,CAAC,CAAC;;EAEF;EACA,MAAM;IACJC,IAAI,EAAEgB,KAAK;IACXd,SAAS,EAAEe,YAAY;IACvBb,KAAK,EAAEc;EACT,CAAC,GAAG1B,QAAQ,CAAC;IACXc,QAAQ,EAAE,CAAC,OAAO,EAAEL,OAAO,CAAC;IAC5BM,OAAO,EAAE,MAAAA,CAAA,KAAY;MACnB,MAAMC,GAAG,GAAG,MAAMd,KAAK,CAACe,GAAG,CACzB,2CAA2CR,OAAO,EACpD,CAAC;MACD,OAAOO,GAAG,CAACR,IAAI;IACjB,CAAC;IACDe,OAAO,EAAE,CAAC,CAACd,OAAO,CAAE;EACtB,CAAC,CAAC;EAEF,IAAIE,YAAY,IAAIc,YAAY,EAAE,oBAAOrB,OAAA;IAAAuB,QAAA,EAAG;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAC1D,IAAIlB,UAAU,EAAE,oBAAOT,OAAA;IAAAuB,QAAA,EAAId,UAAU,CAACmB;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAClD,IAAIL,UAAU,EAAE,oBAAOtB,OAAA;IAAAuB,QAAA,EAAID,UAAU,CAACM;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAI,CAAC;EAElD,oBACE3B,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,GAAI,YAAU,EAACpB,IAAI;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACzB3B,OAAA;MAAAuB,QAAA,EAAMM,IAAI,CAACC,SAAS,CAACV,KAAK,EAAE,IAAI,EAAE,CAAC;IAAC;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACzB,EAAA,CA7CID,QAAQ;EAAA,QACKJ,SAAS,EAOtBD,QAAQ,EAgBRA,QAAQ;AAAA;AAAAmC,EAAA,GAxBR9B,QAAQ;AA+Cd,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}