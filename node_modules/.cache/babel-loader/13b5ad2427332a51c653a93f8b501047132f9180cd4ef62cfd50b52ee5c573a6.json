{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\\\\to-do\\\\src\\\\components\\\\pages\\\\lists\\\\list-add.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, Form, Input } from \"antd\";\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListAdd = ({\n  boardId\n}) => {\n  _s();\n  const queryClient = useQueryClient();\n  const {\n    mutate\n  } = useMutation({\n    mutationFn: async newListData => {\n      const res = await axios.post(\"http://localhost:3000/api/lists\", newListData);\n      return res.data.list;\n    },\n    onSuccess: newList => {\n      // Cache ichida listlarni boshiga qo‘shamiz\n      queryClient.setQueryData([\"lists\", boardId], (oldLists = []) => [newList, ...oldLists]);\n    }\n  });\n  const onFinish = values => {\n    mutate({\n      name: values.name,\n      boardId\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Form, {\n    style: {\n      width: 333,\n      marginTop: \"22px\",\n      padding: \"20px 20px 0 20px\",\n      textAlign: \"end\",\n      backgroundColor: \"#001529\",\n      borderRadius: \"6px\"\n    },\n    onFinish: onFinish,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"name\",\n      rules: [{\n        required: true,\n        message: \"List nomini kiriting!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {\n        placeholder: \"List nomi kiriting!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        children: \"Qo\\u2018shish\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(ListAdd, \"QFZlXM8Sg2zRMrd4z8PQB1Yve2s=\", false, function () {\n  return [useQueryClient, useMutation];\n});\n_c = ListAdd;\nexport default ListAdd;\n\n// import React, { use } from \"react\";\n// import { Button, Checkbox, Form, Input } from \"antd\";\n// import { useMutation } from \"@tanstack/react-query\";\n\n// const ListAdd = ({ boardId }) => {\n//   console.log(\"Board ID:\", boardId);\n\n//   const { mutate } = useMutation({\n//     mutationFn: async (newListData) => {\n//       const res = await axios.post(\n//         \"http://localhost:3000/api/lists\",\n//         newListData\n//       );\n//       return res.data.list;\n//     },\n//   });\n\n//   const onFinish = (values) => {\n//     console.log(\"Success:\", values);\n//   };\n\n//   const onFinishFailed = (errorInfo) => {\n//     console.log(\"Failed:\", errorInfo);\n//   };\n\n//   return (\n//     <>\n//       <Form\n//         name=\"basic\"\n//         style={{\n//           width: 333,\n//           marginTop: \"22px\",\n//           padding: \"20px 20px 0 20px\",\n//           textAlign: \"end\",\n//           backgroundColor: \"#001529\",\n//           borderRadius: \"6px\",\n//         }}\n//         onFinish={onFinish}\n//         onFinishFailed={onFinishFailed}\n//       >\n//         <Form.Item\n//           name=\"username\"\n//           rules={[{ required: true, message: \"List nomini kiriting!\" }]}\n//         >\n//           <Input placeholder=\"List nomi kiriting!\" />\n//         </Form.Item>\n\n//         <Form.Item label={null}>\n//           <Button type=\"primary\" htmlType=\"submit\">\n//             Qo'shish\n//           </Button>\n//         </Form.Item>\n//       </Form>\n//     </>\n//   );\n// };\n// export default ListAdd;\nvar _c;\n$RefreshReg$(_c, \"ListAdd\");","map":{"version":3,"names":["React","Button","Form","Input","useMutation","useQueryClient","axios","jsxDEV","_jsxDEV","ListAdd","boardId","_s","queryClient","mutate","mutationFn","newListData","res","post","data","list","onSuccess","newList","setQueryData","oldLists","onFinish","values","name","style","width","marginTop","padding","textAlign","backgroundColor","borderRadius","children","Item","rules","required","message","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","type","htmlType","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Новая папка/to-do/src/components/pages/lists/list-add.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Form, Input } from \"antd\";\r\nimport { useMutation, useQueryClient } from \"@tanstack/react-query\";\r\nimport axios from \"axios\";\r\n\r\nconst ListAdd = ({ boardId }) => {\r\n  const queryClient = useQueryClient();\r\n\r\n  const { mutate } = useMutation({\r\n    mutationFn: async (newListData) => {\r\n      const res = await axios.post(\r\n        \"http://localhost:3000/api/lists\",\r\n        newListData\r\n      );\r\n      return res.data.list;\r\n    },\r\n    onSuccess: (newList) => {\r\n      // Cache ichida listlarni boshiga qo‘shamiz\r\n      queryClient.setQueryData([\"lists\", boardId], (oldLists = []) => [\r\n        newList,\r\n        ...oldLists,\r\n      ]);\r\n    },\r\n  });\r\n\r\n  const onFinish = (values) => {\r\n    mutate({ name: values.name, boardId });\r\n  };\r\n\r\n  return (\r\n    <Form\r\n      style={{\r\n        width: 333,\r\n        marginTop: \"22px\",\r\n        padding: \"20px 20px 0 20px\",\r\n        textAlign: \"end\",\r\n        backgroundColor: \"#001529\",\r\n        borderRadius: \"6px\",\r\n      }}\r\n      onFinish={onFinish}\r\n    >\r\n      <Form.Item\r\n        name=\"name\"\r\n        rules={[{ required: true, message: \"List nomini kiriting!\" }]}\r\n      >\r\n        <Input placeholder=\"List nomi kiriting!\" />\r\n      </Form.Item>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Qo‘shish\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ListAdd;\r\n\r\n// import React, { use } from \"react\";\r\n// import { Button, Checkbox, Form, Input } from \"antd\";\r\n// import { useMutation } from \"@tanstack/react-query\";\r\n\r\n// const ListAdd = ({ boardId }) => {\r\n//   console.log(\"Board ID:\", boardId);\r\n\r\n//   const { mutate } = useMutation({\r\n//     mutationFn: async (newListData) => {\r\n//       const res = await axios.post(\r\n//         \"http://localhost:3000/api/lists\",\r\n//         newListData\r\n//       );\r\n//       return res.data.list;\r\n//     },\r\n//   });\r\n\r\n//   const onFinish = (values) => {\r\n//     console.log(\"Success:\", values);\r\n//   };\r\n\r\n//   const onFinishFailed = (errorInfo) => {\r\n//     console.log(\"Failed:\", errorInfo);\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <Form\r\n//         name=\"basic\"\r\n//         style={{\r\n//           width: 333,\r\n//           marginTop: \"22px\",\r\n//           padding: \"20px 20px 0 20px\",\r\n//           textAlign: \"end\",\r\n//           backgroundColor: \"#001529\",\r\n//           borderRadius: \"6px\",\r\n//         }}\r\n//         onFinish={onFinish}\r\n//         onFinishFailed={onFinishFailed}\r\n//       >\r\n//         <Form.Item\r\n//           name=\"username\"\r\n//           rules={[{ required: true, message: \"List nomini kiriting!\" }]}\r\n//         >\r\n//           <Input placeholder=\"List nomi kiriting!\" />\r\n//         </Form.Item>\r\n\r\n//         <Form.Item label={null}>\r\n//           <Button type=\"primary\" htmlType=\"submit\">\r\n//             Qo'shish\r\n//           </Button>\r\n//         </Form.Item>\r\n//       </Form>\r\n//     </>\r\n//   );\r\n// };\r\n// export default ListAdd;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}