{"ast":null,"code":"import { __read, __spreadArray } from \"tslib\";\nimport { useRef } from 'react';\nimport useCreation from '../../../useCreation';\nimport useUnmount from '../../../useUnmount';\nimport { setCache, getCache } from '../utils/cache';\nimport { setCachePromise, getCachePromise } from '../utils/cachePromise';\nimport { trigger, subscribe } from '../utils/cacheSubscribe';\nvar useCachePlugin = function (fetchInstance, _a) {\n  var cacheKey = _a.cacheKey,\n    _b = _a.cacheTime,\n    cacheTime = _b === void 0 ? 5 * 60 * 1000 : _b,\n    _c = _a.staleTime,\n    staleTime = _c === void 0 ? 0 : _c,\n    customSetCache = _a.setCache,\n    customGetCache = _a.getCache;\n  var unSubscribeRef = useRef(undefined);\n  var currentPromiseRef = useRef(undefined);\n  var _setCache = function (key, cachedData) {\n    if (customSetCache) {\n      customSetCache(cachedData);\n    } else {\n      setCache(key, cacheTime, cachedData);\n    }\n    trigger(key, cachedData.data);\n  };\n  var _getCache = function (key, params) {\n    if (params === void 0) {\n      params = [];\n    }\n    if (customGetCache) {\n      return customGetCache(params);\n    }\n    return getCache(key);\n  };\n  useCreation(function () {\n    if (!cacheKey) {\n      return;\n    }\n    // get data from cache when init\n    var cacheData = _getCache(cacheKey);\n    if (cacheData && Object.hasOwnProperty.call(cacheData, 'data')) {\n      fetchInstance.state.data = cacheData.data;\n      fetchInstance.state.params = cacheData.params;\n      if (staleTime === -1 || Date.now() - cacheData.time <= staleTime) {\n        fetchInstance.state.loading = false;\n      }\n    }\n    // subscribe same cachekey update, trigger update\n    unSubscribeRef.current = subscribe(cacheKey, function (data) {\n      fetchInstance.setState({\n        data: data\n      });\n    });\n  }, []);\n  useUnmount(function () {\n    var _a;\n    (_a = unSubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unSubscribeRef);\n  });\n  if (!cacheKey) {\n    return {};\n  }\n  return {\n    onBefore: function (params) {\n      var cacheData = _getCache(cacheKey, params);\n      if (!cacheData || !Object.hasOwnProperty.call(cacheData, 'data')) {\n        return {};\n      }\n      // If the data is fresh, stop request\n      if (staleTime === -1 || Date.now() - cacheData.time <= staleTime) {\n        return {\n          loading: false,\n          data: cacheData === null || cacheData === void 0 ? void 0 : cacheData.data,\n          error: undefined,\n          returnNow: true\n        };\n      } else {\n        // If the data is stale, return data, and request continue\n        return {\n          data: cacheData === null || cacheData === void 0 ? void 0 : cacheData.data,\n          error: undefined\n        };\n      }\n    },\n    onRequest: function (service, args) {\n      var servicePromise = getCachePromise(cacheKey);\n      // If has servicePromise, and is not trigger by self, then use it\n      if (servicePromise && servicePromise !== currentPromiseRef.current) {\n        return {\n          servicePromise: servicePromise\n        };\n      }\n      servicePromise = service.apply(void 0, __spreadArray([], __read(args), false));\n      currentPromiseRef.current = servicePromise;\n      setCachePromise(cacheKey, servicePromise);\n      return {\n        servicePromise: servicePromise\n      };\n    },\n    onSuccess: function (data, params) {\n      var _a;\n      if (cacheKey) {\n        // cancel subscribe, avoid trgger self\n        (_a = unSubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unSubscribeRef);\n        _setCache(cacheKey, {\n          data: data,\n          params: params,\n          time: Date.now()\n        });\n        // resubscribe\n        unSubscribeRef.current = subscribe(cacheKey, function (d) {\n          fetchInstance.setState({\n            data: d\n          });\n        });\n      }\n    },\n    onMutate: function (data) {\n      var _a;\n      if (cacheKey) {\n        // cancel subscribe, avoid trigger self\n        (_a = unSubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unSubscribeRef);\n        _setCache(cacheKey, {\n          data: data,\n          params: fetchInstance.state.params,\n          time: Date.now()\n        });\n        // resubscribe\n        unSubscribeRef.current = subscribe(cacheKey, function (d) {\n          fetchInstance.setState({\n            data: d\n          });\n        });\n      }\n    }\n  };\n};\nexport default useCachePlugin;","map":{"version":3,"names":["__read","__spreadArray","useRef","useCreation","useUnmount","setCache","getCache","setCachePromise","getCachePromise","trigger","subscribe","useCachePlugin","fetchInstance","_a","cacheKey","_b","cacheTime","_c","staleTime","customSetCache","customGetCache","unSubscribeRef","undefined","currentPromiseRef","_setCache","key","cachedData","data","_getCache","params","cacheData","Object","hasOwnProperty","call","state","Date","now","time","loading","current","setState","onBefore","error","returnNow","onRequest","service","args","servicePromise","apply","onSuccess","d","onMutate"],"sources":["C:/Users/user/Desktop/Новая папка/to-do/node_modules/ahooks/es/useRequest/src/plugins/useCachePlugin.js"],"sourcesContent":["import { __read, __spreadArray } from \"tslib\";\nimport { useRef } from 'react';\nimport useCreation from '../../../useCreation';\nimport useUnmount from '../../../useUnmount';\nimport { setCache, getCache } from '../utils/cache';\nimport { setCachePromise, getCachePromise } from '../utils/cachePromise';\nimport { trigger, subscribe } from '../utils/cacheSubscribe';\nvar useCachePlugin = function (fetchInstance, _a) {\n  var cacheKey = _a.cacheKey,\n    _b = _a.cacheTime,\n    cacheTime = _b === void 0 ? 5 * 60 * 1000 : _b,\n    _c = _a.staleTime,\n    staleTime = _c === void 0 ? 0 : _c,\n    customSetCache = _a.setCache,\n    customGetCache = _a.getCache;\n  var unSubscribeRef = useRef(undefined);\n  var currentPromiseRef = useRef(undefined);\n  var _setCache = function (key, cachedData) {\n    if (customSetCache) {\n      customSetCache(cachedData);\n    } else {\n      setCache(key, cacheTime, cachedData);\n    }\n    trigger(key, cachedData.data);\n  };\n  var _getCache = function (key, params) {\n    if (params === void 0) {\n      params = [];\n    }\n    if (customGetCache) {\n      return customGetCache(params);\n    }\n    return getCache(key);\n  };\n  useCreation(function () {\n    if (!cacheKey) {\n      return;\n    }\n    // get data from cache when init\n    var cacheData = _getCache(cacheKey);\n    if (cacheData && Object.hasOwnProperty.call(cacheData, 'data')) {\n      fetchInstance.state.data = cacheData.data;\n      fetchInstance.state.params = cacheData.params;\n      if (staleTime === -1 || Date.now() - cacheData.time <= staleTime) {\n        fetchInstance.state.loading = false;\n      }\n    }\n    // subscribe same cachekey update, trigger update\n    unSubscribeRef.current = subscribe(cacheKey, function (data) {\n      fetchInstance.setState({\n        data: data\n      });\n    });\n  }, []);\n  useUnmount(function () {\n    var _a;\n    (_a = unSubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unSubscribeRef);\n  });\n  if (!cacheKey) {\n    return {};\n  }\n  return {\n    onBefore: function (params) {\n      var cacheData = _getCache(cacheKey, params);\n      if (!cacheData || !Object.hasOwnProperty.call(cacheData, 'data')) {\n        return {};\n      }\n      // If the data is fresh, stop request\n      if (staleTime === -1 || Date.now() - cacheData.time <= staleTime) {\n        return {\n          loading: false,\n          data: cacheData === null || cacheData === void 0 ? void 0 : cacheData.data,\n          error: undefined,\n          returnNow: true\n        };\n      } else {\n        // If the data is stale, return data, and request continue\n        return {\n          data: cacheData === null || cacheData === void 0 ? void 0 : cacheData.data,\n          error: undefined\n        };\n      }\n    },\n    onRequest: function (service, args) {\n      var servicePromise = getCachePromise(cacheKey);\n      // If has servicePromise, and is not trigger by self, then use it\n      if (servicePromise && servicePromise !== currentPromiseRef.current) {\n        return {\n          servicePromise: servicePromise\n        };\n      }\n      servicePromise = service.apply(void 0, __spreadArray([], __read(args), false));\n      currentPromiseRef.current = servicePromise;\n      setCachePromise(cacheKey, servicePromise);\n      return {\n        servicePromise: servicePromise\n      };\n    },\n    onSuccess: function (data, params) {\n      var _a;\n      if (cacheKey) {\n        // cancel subscribe, avoid trgger self\n        (_a = unSubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unSubscribeRef);\n        _setCache(cacheKey, {\n          data: data,\n          params: params,\n          time: Date.now()\n        });\n        // resubscribe\n        unSubscribeRef.current = subscribe(cacheKey, function (d) {\n          fetchInstance.setState({\n            data: d\n          });\n        });\n      }\n    },\n    onMutate: function (data) {\n      var _a;\n      if (cacheKey) {\n        // cancel subscribe, avoid trigger self\n        (_a = unSubscribeRef.current) === null || _a === void 0 ? void 0 : _a.call(unSubscribeRef);\n        _setCache(cacheKey, {\n          data: data,\n          params: fetchInstance.state.params,\n          time: Date.now()\n        });\n        // resubscribe\n        unSubscribeRef.current = subscribe(cacheKey, function (d) {\n          fetchInstance.setState({\n            data: d\n          });\n        });\n      }\n    }\n  };\n};\nexport default useCachePlugin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}