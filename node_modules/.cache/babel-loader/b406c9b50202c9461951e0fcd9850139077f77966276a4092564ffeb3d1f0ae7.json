{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\\\\to-do\\\\src\\\\components\\\\pages\\\\lists\\\\Lists.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Card, Col, Row } from \"antd\";\nimport \"./lists.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListPage = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n\n  // 1. Boardni name orqali topib, faqat _id ni qaytarish\n  const {\n    data: boardId,\n    isLoading: boardLoading\n  } = useQuery({\n    queryKey: [\"boardId\", name],\n    queryFn: async () => {\n      const res = await axios.get(`http://localhost:3000/api/boards`);\n      const board = res.data.find(b => b.name === name);\n      if (!board) throw new Error(\"Board topilmadi\");\n      return board._id; // faqat _id qaytadi\n    },\n    enabled: !!name\n  });\n\n  // 2. Board ID bo‘yicha listlarni olish\n  const {\n    data: lists,\n    isLoading: listsLoading\n  } = useQuery({\n    queryKey: [\"lists\", boardId],\n    queryFn: async () => {\n      const res = await axios.get(\"http://localhost:3000/api/lists\");\n\n      // Agar backend array qaytarsa\n      const filtered = res.data.filter(list => list.boardId === boardId);\n      return filtered;\n    },\n    enabled: !!boardId // boardId bo‘lmasa query ishlamaydi\n  });\n  console.log(lists);\n  if (boardLoading || listsLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 44\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      style: {\n        padding: \"20px\",\n        width: \"100%\"\n      },\n      children: lists === null || lists === void 0 ? void 0 : lists.map((list, index) => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          sm: 12,\n          lg: 8,\n          xl: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(ListPage, \"gE+/Nl9o2IYsrmIwVcw6VZc8/nk=\", false, function () {\n  return [useParams, useQuery, useQuery];\n});\n_c = ListPage;\nexport default ListPage;\nvar _c;\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"names":["useQuery","useParams","axios","Card","Col","Row","jsxDEV","_jsxDEV","Fragment","_Fragment","ListPage","_s","name","data","boardId","isLoading","boardLoading","queryKey","queryFn","res","get","board","find","b","Error","_id","enabled","lists","listsLoading","filtered","filter","list","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","gutter","style","padding","width","map","index","xs","sm","lg","xl","className","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Новая папка/to-do/src/components/pages/lists/Lists.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Card, Col, Row } from \"antd\";\r\n\r\nimport \"./lists.css\";\r\n\r\nconst ListPage = () => {\r\n  const { name } = useParams();\r\n\r\n  // 1. Boardni name orqali topib, faqat _id ni qaytarish\r\n  const { data: boardId, isLoading: boardLoading } = useQuery({\r\n    queryKey: [\"boardId\", name],\r\n    queryFn: async () => {\r\n      const res = await axios.get(`http://localhost:3000/api/boards`);\r\n      const board = res.data.find((b) => b.name === name);\r\n      if (!board) throw new Error(\"Board topilmadi\");\r\n      return board._id; // faqat _id qaytadi\r\n    },\r\n    enabled: !!name,\r\n  });\r\n\r\n  // 2. Board ID bo‘yicha listlarni olish\r\n  const { data: lists, isLoading: listsLoading } = useQuery({\r\n    queryKey: [\"lists\", boardId],\r\n    queryFn: async () => {\r\n      const res = await axios.get(\"http://localhost:3000/api/lists\");\r\n\r\n      // Agar backend array qaytarsa\r\n      const filtered = res.data.filter((list) => list.boardId === boardId);\r\n      return filtered;\r\n    },\r\n    enabled: !!boardId, // boardId bo‘lmasa query ishlamaydi\r\n  });\r\n\r\n  console.log(lists);\r\n\r\n  if (boardLoading || listsLoading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <>\r\n      <Row gutter={[16, 16]} style={{ padding: \"20px\", width: \"100%\" }}>\r\n        {lists?.map((list, index) => {\r\n          return (\r\n            <Col key={index} xs={24} sm={12} lg={8} xl={6}>\r\n              \r\n              <div className=\"card\">\r\n\r\n              </div>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}