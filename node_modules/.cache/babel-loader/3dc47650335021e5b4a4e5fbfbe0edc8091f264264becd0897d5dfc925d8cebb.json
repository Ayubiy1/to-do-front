{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\\\u041D\\u043E\\u0432\\u0430\\u044F \\u043F\\u0430\\u043F\\u043A\\u0430\\\\to-do\\\\src\\\\components\\\\pages\\\\lists\\\\Lists.js\",\n  _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Form, useParams } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { Button, Card, Col, Input, message, Row } from \"antd\";\nimport \"./lists.css\";\nimport ListAdd from \"./list-add\";\nimport Tasks from \"../tasks\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListPage = () => {\n  _s();\n  const {\n    name\n  } = useParams();\n  const [taskName, setTaskName] = useState(null);\n\n  // 1. Boardni name orqali topib, faqat _id ni qaytarish\n  const {\n    data: boardId,\n    isLoading: boardLoading\n  } = useQuery({\n    queryKey: [\"boardId\", name],\n    queryFn: async () => {\n      const res = await axios.get(`http://localhost:3000/api/boards`);\n      const board = res.data.find(b => b.name === name);\n      if (!board) throw new Error(\"Board topilmadi\");\n      return board._id; // faqat _id qaytadi\n    },\n    enabled: !!name\n  });\n\n  // 2. Board ID bo‘yicha listlarni olish\n  const {\n    data: lists,\n    isLoading: listsLoading\n  } = useQuery({\n    queryKey: [\"lists\", boardId],\n    queryFn: async () => {\n      const res = await axios.get(\"http://localhost:3000/api/lists\");\n\n      // Agar backend array qaytarsa\n      const filtered = res.data.filter(list => list.boardId === boardId);\n      return filtered;\n    },\n    enabled: !!boardId // boardId bo‘lmasa query ishlamaydi\n  });\n\n  // Add task\n  const {\n    mutate: addTask,\n    isLoading: addTaskLoading\n  } = useQuery({\n    queryKey: [\"addTask\"],\n    queryFn: async newTask => {\n      const res = await axios.post(\"http://localhost:3000/api/tasks\", newTask);\n      return res.data;\n    }\n  });\n  if (boardLoading || listsLoading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 44\n  }, this);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        justifyContent: \"end\",\n        alignItems: \"center\",\n        padding: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ListAdd, {\n        boardId: boardId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      gutter: [16, 16],\n      style: {\n        padding: \"20px\",\n        width: \"100%\"\n      },\n      children: lists === null || lists === void 0 ? void 0 : lists.map((list, index) => {\n        return /*#__PURE__*/_jsxDEV(Col, {\n          xs: 24,\n          sm: 12,\n          lg: 8,\n          xl: 6,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            className: \"card\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: list.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Form\n            // form={form}\n            , {\n              style: {\n                width: 333,\n                marginTop: \"22px\",\n                padding: \"20px 20px 0 20px\",\n                textAlign: \"end\",\n                backgroundColor: \"#001529\",\n                borderRadius: \"6px\"\n              },\n              onFinish: onFinish,\n              children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"name\",\n                rules: [{\n                  required: true,\n                  message: \"List nomini kiriting!\"\n                }],\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  placeholder: \"edit Task name\",\n                  rules: [{\n                    required: true,\n                    message: \"Task nomini kiriting!\"\n                  }],\n                  onChange: e => setTaskName(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  type: \"primary\",\n                  htmlType: \"submit\",\n                  children: \"Qo\\u2018shish\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Tasks, {\n              listId: list === null || list === void 0 ? void 0 : list._id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ListPage, \"JvzrJhYNFWWHuptdd64HP4pAmMQ=\", false, function () {\n  return [useParams, useQuery, useQuery, useQuery];\n});\n_c = ListPage;\nexport default ListPage;\nvar _c;\n$RefreshReg$(_c, \"ListPage\");","map":{"version":3,"names":["useQuery","Form","useParams","axios","Button","Card","Col","Input","message","Row","ListAdd","Tasks","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ListPage","_s","name","taskName","setTaskName","data","boardId","isLoading","boardLoading","queryKey","queryFn","res","get","board","find","b","Error","_id","enabled","lists","listsLoading","filtered","filter","list","mutate","addTask","addTaskLoading","newTask","post","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","justifyContent","alignItems","padding","gutter","width","map","index","xs","sm","lg","xl","className","marginTop","textAlign","backgroundColor","borderRadius","onFinish","Item","rules","required","placeholder","onChange","e","target","value","type","htmlType","listId","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/Новая папка/to-do/src/components/pages/lists/Lists.js"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport { Form, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Button, Card, Col, Input, message, Row } from \"antd\";\r\n\r\nimport \"./lists.css\";\r\nimport ListAdd from \"./list-add\";\r\nimport Tasks from \"../tasks\";\r\nimport { useState } from \"react\";\r\n\r\nconst ListPage = () => {\r\n  const { name } = useParams();\r\n  const [taskName, setTaskName] = useState(null);\r\n\r\n  // 1. Boardni name orqali topib, faqat _id ni qaytarish\r\n  const { data: boardId, isLoading: boardLoading } = useQuery({\r\n    queryKey: [\"boardId\", name],\r\n    queryFn: async () => {\r\n      const res = await axios.get(`http://localhost:3000/api/boards`);\r\n      const board = res.data.find((b) => b.name === name);\r\n      if (!board) throw new Error(\"Board topilmadi\");\r\n      return board._id; // faqat _id qaytadi\r\n    },\r\n    enabled: !!name,\r\n  });\r\n\r\n  // 2. Board ID bo‘yicha listlarni olish\r\n  const { data: lists, isLoading: listsLoading } = useQuery({\r\n    queryKey: [\"lists\", boardId],\r\n    queryFn: async () => {\r\n      const res = await axios.get(\"http://localhost:3000/api/lists\");\r\n\r\n      // Agar backend array qaytarsa\r\n      const filtered = res.data.filter((list) => list.boardId === boardId);\r\n      return filtered;\r\n    },\r\n    enabled: !!boardId, // boardId bo‘lmasa query ishlamaydi\r\n  });\r\n\r\n  // Add task\r\n  const { mutate: addTask, isLoading: addTaskLoading } = useQuery({\r\n    queryKey: [\"addTask\"],\r\n    queryFn: async (newTask) => {\r\n      const res = await axios.post(\"http://localhost:3000/api/tasks\", newTask);\r\n      return res.data;\r\n    },\r\n  });\r\n\r\n  if (boardLoading || listsLoading) return <p>Loading...</p>;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"end\",\r\n          alignItems: \"center\",\r\n          padding: \"20px\",\r\n        }}\r\n      >\r\n        <ListAdd boardId={boardId} />\r\n      </div>\r\n\r\n      <Row gutter={[16, 16]} style={{ padding: \"20px\", width: \"100%\" }}>\r\n        {lists?.map((list, index) => {\r\n          return (\r\n            <Col key={index} xs={24} sm={12} lg={8} xl={6}>\r\n              <Card className=\"card\">\r\n                <h3>{list.name}</h3>\r\n                <Form\r\n                  // form={form}\r\n                  style={{\r\n                    width: 333,\r\n                    marginTop: \"22px\",\r\n                    padding: \"20px 20px 0 20px\",\r\n                    textAlign: \"end\",\r\n                    backgroundColor: \"#001529\",\r\n                    borderRadius: \"6px\",\r\n                  }}\r\n                  onFinish={onFinish}\r\n                >\r\n                  <Form.Item\r\n                    name=\"name\"\r\n                    rules={[\r\n                      { required: true, message: \"List nomini kiriting!\" },\r\n                    ]}\r\n                  >\r\n                    <Input\r\n                      placeholder=\"edit Task name\"\r\n                      rules={[\r\n                        { required: true, message: \"Task nomini kiriting!\" },\r\n                      ]}\r\n                      onChange={(e) => setTaskName(e.target.value)}\r\n                    />\r\n                  </Form.Item>\r\n\r\n                  <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                      Qo‘shish\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Form>\r\n                {/* <Form className=\"add-task\">\r\n                  <Form.Item>\r\n                    <Input\r\n                      placeholder=\"edit Task name\"\r\n                      rules={[\r\n                        { required: true, message: \"Task nomini kiriting!\" },\r\n                      ]}\r\n                      onChange={(e) => setTaskName(e.target.value)}\r\n                    />\r\n                  </Form.Item>\r\n                  <Form.Item>\r\n                    <Button\r\n                      onClick={() => {\r\n                        console.log(list?._id);\r\n                        console.log(taskName);\r\n                      }}\r\n                      type=\"primary\"\r\n                    >\r\n                      Add\r\n                    </Button>\r\n                  </Form.Item>\r\n                </Form> */}\r\n\r\n                <Tasks listId={list?._id} />\r\n              </Card>\r\n            </Col>\r\n          );\r\n        })}\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ListPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}